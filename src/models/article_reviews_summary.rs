/* 
 * Zalando Shop API
 *
 * The shop API empowers developers to build amazing new apps or websites using Zalando shop data and services.
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// ArticleReviewsSummary : Zalando API Article Reviews Summary Schema

#[derive(Debug, Serialize, Deserialize)]
pub struct ArticleReviewsSummary {
  #[serde(rename = "articleModelId")] article_model_id: String,
  /// average star rating of the article
  #[serde(rename = "averageStarRating")] average_star_rating: f32,
  /// number of user reviews of the article
  #[serde(rename = "numberOfUserReviews")] number_of_user_reviews: i32,
  /// number of users recommended to the article
  #[serde(rename = "numberOfUserRecommendations")] number_of_user_recommendations: i32,
  /// number of positive recommendations to the article
  #[serde(rename = "numberOfUserPositiveRecommendations")] number_of_user_positive_recommendations: i32,
  #[serde(rename = "starRatingDistribution")] star_rating_distribution: Option<::models::ArticleReviewsSummaryStarRatingDistribution>,
  #[serde(rename = "articleSizeRatings")] article_size_ratings: Option<::models::ArticleReviewsSummaryArticleSizeRatings>
}

impl ArticleReviewsSummary {
  /// Zalando API Article Reviews Summary Schema
  pub fn new(article_model_id: String, average_star_rating: f32, number_of_user_reviews: i32, number_of_user_recommendations: i32, number_of_user_positive_recommendations: i32) -> ArticleReviewsSummary {
    ArticleReviewsSummary {
      article_model_id: article_model_id,
      average_star_rating: average_star_rating,
      number_of_user_reviews: number_of_user_reviews,
      number_of_user_recommendations: number_of_user_recommendations,
      number_of_user_positive_recommendations: number_of_user_positive_recommendations,
      star_rating_distribution: None,
      article_size_ratings: None
    }
  }

  pub fn set_article_model_id(&mut self, article_model_id: String) {
    self.article_model_id = article_model_id;
  }

  pub fn with_article_model_id(mut self, article_model_id: String) -> ArticleReviewsSummary {
    self.article_model_id = article_model_id;
    self
  }

  pub fn article_model_id(&self) -> &String {
    &self.article_model_id
  }

  pub fn set_average_star_rating(&mut self, average_star_rating: f32) {
    self.average_star_rating = average_star_rating;
  }

  pub fn with_average_star_rating(mut self, average_star_rating: f32) -> ArticleReviewsSummary {
    self.average_star_rating = average_star_rating;
    self
  }

  pub fn average_star_rating(&self) -> &f32 {
    &self.average_star_rating
  }

  pub fn set_number_of_user_reviews(&mut self, number_of_user_reviews: i32) {
    self.number_of_user_reviews = number_of_user_reviews;
  }

  pub fn with_number_of_user_reviews(mut self, number_of_user_reviews: i32) -> ArticleReviewsSummary {
    self.number_of_user_reviews = number_of_user_reviews;
    self
  }

  pub fn number_of_user_reviews(&self) -> &i32 {
    &self.number_of_user_reviews
  }

  pub fn set_number_of_user_recommendations(&mut self, number_of_user_recommendations: i32) {
    self.number_of_user_recommendations = number_of_user_recommendations;
  }

  pub fn with_number_of_user_recommendations(mut self, number_of_user_recommendations: i32) -> ArticleReviewsSummary {
    self.number_of_user_recommendations = number_of_user_recommendations;
    self
  }

  pub fn number_of_user_recommendations(&self) -> &i32 {
    &self.number_of_user_recommendations
  }

  pub fn set_number_of_user_positive_recommendations(&mut self, number_of_user_positive_recommendations: i32) {
    self.number_of_user_positive_recommendations = number_of_user_positive_recommendations;
  }

  pub fn with_number_of_user_positive_recommendations(mut self, number_of_user_positive_recommendations: i32) -> ArticleReviewsSummary {
    self.number_of_user_positive_recommendations = number_of_user_positive_recommendations;
    self
  }

  pub fn number_of_user_positive_recommendations(&self) -> &i32 {
    &self.number_of_user_positive_recommendations
  }

  pub fn set_star_rating_distribution(&mut self, star_rating_distribution: ::models::ArticleReviewsSummaryStarRatingDistribution) {
    self.star_rating_distribution = Some(star_rating_distribution);
  }

  pub fn with_star_rating_distribution(mut self, star_rating_distribution: ::models::ArticleReviewsSummaryStarRatingDistribution) -> ArticleReviewsSummary {
    self.star_rating_distribution = Some(star_rating_distribution);
    self
  }

  pub fn star_rating_distribution(&self) -> &Option<::models::ArticleReviewsSummaryStarRatingDistribution> {
    &self.star_rating_distribution
  }

  pub fn set_article_size_ratings(&mut self, article_size_ratings: ::models::ArticleReviewsSummaryArticleSizeRatings) {
    self.article_size_ratings = Some(article_size_ratings);
  }

  pub fn with_article_size_ratings(mut self, article_size_ratings: ::models::ArticleReviewsSummaryArticleSizeRatings) -> ArticleReviewsSummary {
    self.article_size_ratings = Some(article_size_ratings);
    self
  }

  pub fn article_size_ratings(&self) -> &Option<::models::ArticleReviewsSummaryArticleSizeRatings> {
    &self.article_size_ratings
  }

}



